name: Security SAST scan (Detect vulnerabilities)

on:
  pull_request:
    branches:
      - main
      - develop
      - preprod

jobs:
  semgrep:
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: read
      security-events: write
      actions: read

    steps:

      - name: üì• Checkout du code
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: üì¶ Installation Semgrep
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install semgrep

      - name: üöÄ Analyse Semgrep + G√©n√©ration SARIF
        shell: pwsh
        run: |
          Set-Location $env:GITHUB_WORKSPACE

          # Force Python UTF-8 globally (bien plus fiable que PYTHONIOENCODING seul)
          setx PYTHONUTF8 1 | Out-Null
          $env:PYTHONUTF8 = "1"

          # Ex√©cuter Semgrep en mode silencieux pour √©viter les erreurs d'encodage console Windows
          semgrep --config auto --sarif --output semgrep-report.sarif . --quiet 2>$null

          if (-Not (Test-Path "semgrep-report.sarif")) {
            Write-Host "‚ùå ERREUR: semgrep-report.sarif n'a PAS √©t√© g√©n√©r√©."
            exit 1
          }

          # Analyse SARIF
          $json = Get-Content semgrep-report.sarif -Raw -Encoding UTF8 | ConvertFrom-Json
          $vulnCount = 0
          if ($json.runs.Count -gt 0 -and $json.runs[0].psobject.Properties.Name -contains 'results') {
            $vulnCount = $json.runs[0].results.Count
          }

          Add-Content $env:GITHUB_ENV "VULN_COUNT=$vulnCount"
          Write-Host "Vuln√©rabilit√©s d√©tect√©es : $vulnCount"

      - name: ‚¨ÜÔ∏è Upload SARIF vers GitHub Advanced Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-report.sarif
          category: semgrep-sast-analysis

      - name: ‚úÖ V√©rification du r√©sultat
        shell: pwsh
        run: |
          $v = [int]$env:VULN_COUNT
          if ($v -gt 0) {
            Write-Host "‚ùå $v vuln√©rabilit√©s d√©tect√©es. CI bloqu√©e."
            exit 1
          }
          Write-Host "‚úÖ Aucune vuln√©rabilit√© d√©tect√©e. CI valid√©e."